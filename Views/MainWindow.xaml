<mah:MetroWindow x:Class="TrioDocs.MainWindow"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                 xmlns:viewModels="clr-namespace:TrioDocs.ViewModels"
                 xmlns:docViewModels="clr-namespace:TrioDocs.ViewModels.DocumentViewModels"
                 xmlns:core="clr-namespace:TrioDocs.Core"
                 mc:Ignorable="d" Title="TrioDocs" Height="700" Width="1000"
                 WindowStartupLocation="CenterScreen" Name="MyMainWindow" Closing="MainWindow_OnClosing"
                 GlowBrush="{DynamicResource MahApps.Brushes.Accent}"
                 Icon="/Assets/app_icon.ico">

    <Window.DataContext>
        <viewModels:MainViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <core:TypeToBoolConverter x:Key="TypeToBoolConverter"/>
    </Window.Resources>

    <DockPanel LastChildFill="True">
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="_Файл">
                <MenuItem Header="_Создать">
                    <MenuItem Header="Документ Word" Command="{Binding NewWordDocumentCommand}"/>
                    <MenuItem Header="Таблица Excel" Command="{Binding NewExcelDocumentCommand}"/>
                </MenuItem>
                <Separator/>
                <MenuItem Header="_Открыть..." Command="{Binding OpenFileCommand}"/>
                <MenuItem Header="_Сохранить" Command="{Binding SaveFileCommand}"/>
                <Separator/>
                <MenuItem Header="Последние файлы" ItemsSource="{Binding RecentFiles}">
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="MenuItem">
                            <Setter Property="Header" Value="{Binding}"/>
                            <Setter Property="Command" Value="{Binding DataContext.OpenRecentFileCommand, RelativeSource={RelativeSource AncestorType=Menu}}"/>
                            <Setter Property="CommandParameter" Value="{Binding}"/>
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
                <Separator/>
                <MenuItem Header="_Выход" Command="{Binding ExitCommand}"/>
            </MenuItem>
            <MenuItem Header="_Вид">
                <MenuItem Header="Светлая тема" Command="{Binding SetLightThemeCommand}"/>
                <MenuItem Header="Темная тема" Command="{Binding SetDarkThemeCommand}"/>
            </MenuItem>
            <MenuItem Header="_Справка">
                <MenuItem Header="О программе" Command="{Binding ShowAboutDialogCommand}"/>
            </MenuItem>
        </Menu>

        <ToolBarTray DockPanel.Dock="Top">
            <ToolBar>
                <Button ToolTip="Создать новый документ" Click="NewDocument_Click">
                    <TextBlock FontFamily="Segoe MDL2 Assets" FontSize="16" Text=""/>
                    <Button.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Документ Word" Command="{Binding NewWordDocumentCommand}"/>
                            <MenuItem Header="Таблица Excel" Command="{Binding NewExcelDocumentCommand}"/>
                        </ContextMenu>
                    </Button.ContextMenu>
                </Button>
                <Button ToolTip="Открыть файл" Click="OpenFile_Click">
                    <TextBlock FontFamily="Segoe MDL2 Assets" FontSize="16" Text=""/>
                </Button>
                <Button ToolTip="Сохранить файл" Click="SaveFile_Click">
                    <TextBlock FontFamily="Segoe MDL2 Assets" FontSize="16" Text=""/>
                </Button>
            </ToolBar>
            <ToolBar>
                <ToolBar.Style>
                    <Style TargetType="ToolBar">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SelectedDocument, Converter={StaticResource TypeToBoolConverter}, ConverterParameter={x:Type docViewModels:WordDocumentViewModel}}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ToolBar.Style>
                <ToggleButton IsChecked="{Binding SelectedDocument.IsSelectionBold, Mode=OneWay}" Click="ToggleBold_Click">
                    <TextBlock FontFamily="Segoe UI Symbol" FontWeight="Bold" FontSize="16" Text="B"/>
                </ToggleButton>
                <ToggleButton IsChecked="{Binding SelectedDocument.IsSelectionItalic, Mode=OneWay}" Click="ToggleItalic_Click">
                    <TextBlock FontFamily="Segoe UI Symbol" FontStyle="Italic" FontSize="16" Text="I"/>
                </ToggleButton>
                <ToggleButton IsChecked="{Binding SelectedDocument.IsSelectionUnderline, Mode=OneWay}" Click="ToggleUnderline_Click">
                    <TextBlock FontFamily="Segoe UI Symbol" TextDecorations="Underline" FontSize="16" Text="U"/>
                </ToggleButton>
                <Separator/>
                <ComboBox ItemsSource="{Binding SelectedDocument.FontFamilies}" SelectedItem="{Binding SelectedDocument.SelectedFontFamily, Mode=TwoWay}" Width="150" SelectionChanged="FontFamily_SelectionChanged"/>
                <ComboBox ItemsSource="{Binding SelectedDocument.FontSizes}" SelectedItem="{Binding SelectedDocument.SelectedFontSize, Mode=TwoWay}" Width="60" IsEditable="True" TextBoxBase.TextChanged="FontSize_TextChanged"/>
            </ToolBar>
            <ToolBar>
                <ToolBar.Style>
                    <Style TargetType="ToolBar">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SelectedDocument, Converter={StaticResource TypeToBoolConverter}, ConverterParameter={x:Type docViewModels:ExcelDocumentViewModel}}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ToolBar.Style>
                <Button ToolTip="Добавить строку" Click="AddRow_Click">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock FontFamily="Segoe MDL2 Assets" FontSize="16" Text="" Margin="0,0,5,0" VerticalAlignment="Center"/>
                        <TextBlock Text="Добавить строку"/>
                    </StackPanel>
                </Button>
                <Button ToolTip="Удалить выбранную строку" Click="DeleteRow_Click">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock FontFamily="Segoe MDL2 Assets" FontSize="16" Text="" Margin="0,0,5,0" VerticalAlignment="Center"/>
                        <TextBlock Text="Удалить строку"/>
                    </StackPanel>
                </Button>
            </ToolBar>
        </ToolBarTray>

        <StatusBar DockPanel.Dock="Bottom">
            <StatusBarItem>
                <TextBlock Text="{Binding SelectedDocument.StatusInfo, FallbackValue='Готово', TargetNullValue='Готово'}"/>
            </StatusBarItem>
        </StatusBar>

        <core:PersistingTabControl x:Name="MainTabControl" ItemsSource="{Binding Documents}" SelectedItem="{Binding SelectedDocument, Mode=TwoWay}">
            <TabControl.ContentTemplate>
                <DataTemplate>
                    <ContentControl Content="{Binding}">
                        <ContentControl.Resources>
                            <DataTemplate DataType="{x:Type docViewModels:WordDocumentViewModel}">
                                <RichTextBox Loaded="RichTextBox_Loaded" SelectionChanged="RichTextBox_SelectionChanged" TextChanged="RichTextBox_TextChanged" AcceptsReturn="True" VerticalScrollBarVisibility="Auto" Padding="10"/>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type docViewModels:ExcelDocumentViewModel}">
                                <DataGrid ItemsSource="{Binding SheetData.DefaultView}" AutoGenerateColumns="False" Loaded="DataGrid_Loaded" LoadingRow="DataGrid_LoadingRow" HeadersVisibility="All" RowHeaderWidth="50" GridLinesVisibility="All">
                                    <DataGrid.ColumnHeaderStyle>
                                        <Style TargetType="DataGridColumnHeader">
                                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                        </Style>
                                    </DataGrid.ColumnHeaderStyle>
                                    <DataGrid.RowHeaderStyle>
                                        <Style TargetType="DataGridRowHeader">
                                            <Setter Property="Content" Value="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=Header}"/>
                                        </Style>
                                    </DataGrid.RowHeaderStyle>
                                </DataGrid>
                            </DataTemplate>
                        </ContentControl.Resources>
                    </ContentControl>
                </DataTemplate>
            </TabControl.ContentTemplate>
            <TabControl.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Text="{Binding Header}" VerticalAlignment="Center"/>
                        <Button Grid.Column="1" Content="x" Command="{Binding DataContext.CloseDocumentCommand, RelativeSource={RelativeSource AncestorType=TabControl}}" CommandParameter="{Binding}"/>
                    </Grid>
                </DataTemplate>
            </TabControl.ItemTemplate>
        </core:PersistingTabControl>
    </DockPanel>
</mah:MetroWindow>